@using d2s3.State
@using d2s3.Models
@using System.Net.WebSockets
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject ChatStateContainer ChatState

<form method="POST" class="h-full w-3/5 outline-white bg-light-gray rounded-t-2xl p-4" @onsubmit:preventDefault
  @onsubmit="HandlePrompt">
  <textarea name="ai-prompt" id="prompt" class="bg-transparent h-3/4 resize-none outline-none w-full"
    placeholder="@PlaceholderTexts[PlaceholderIndex]" @bind="ChatState.CurrentPrompt" @onkeydown="HandlePromptEnter">
  </textarea>
  <div class="flex justify-end">
    <button type="submit"
      class="bg-white text-black rounded-full duration-200 hover:opacity-75 cursor-pointer p-2 px-3.5 disabled:opacity-50"
      disabled="@ChatState.IsLoadingAiResponse">
      â†‘
    </button>
  </div>
</form>

@code {
  [Parameter]
  public string? ChatId { get; set; }
  [Parameter]
  public bool IsNew { get; set; } = false;

  private readonly string[] PlaceholderTexts = new[]{
"What does 'Tung Tung Tung Tung Sahur' mean?",
"Translate 'gurt: yo sybau ikiab' to English.",
"@grok is this true?",
"Am I adopted?"
};
  private int PlaceholderIndex = 0;
  private System.Timers.Timer? PlaceholderTimer;

  private async Task HandlePrompt()
  {
    await ChatState.HandlePrompt(NavigationManager, ChatId, IsNew);
    await InvokeAsync(StateHasChanged);
    await JS.InvokeVoidAsync("scrollToBottom", "chat-list");
  }

  private async Task HandlePromptEnter(KeyboardEventArgs e)
  {
    if (e.Code == "Enter" && e.ShiftKey)
    {
      await JS.InvokeVoidAsync("scrollToBottom", "chat-list");
      await HandlePrompt();
    }
  }

  protected override void OnInitialized()
  {
    PlaceholderTimer = new System.Timers.Timer(5000);
    PlaceholderTimer.Elapsed += (_, __) =>
    {
      PlaceholderIndex = (PlaceholderIndex + 1) % PlaceholderTexts.Length;
      InvokeAsync(StateHasChanged);
    };
    PlaceholderTimer.Start();
  }

  public void Dispose()
  {
    PlaceholderTimer?.Stop();
    PlaceholderTimer?.Dispose();
  }
}